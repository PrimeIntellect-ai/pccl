add_executable(test_accept_new_peers test_accept_new_peers.cpp)
target_link_libraries(test_accept_new_peers GTest::gtest_main)
add_test(NAME test_accept_new_peers COMMAND test_accept_new_peers)
target_link_libraries(test_accept_new_peers tinysockets)

option(USE_SANITIZER "Use sanitizer" OFF)

# sanitizer
if (USE_SANITIZER)
    if (WIN32)
        target_link_options(test_accept_new_peers PRIVATE /fsanitize=address /fsanitize=leak /fsanitize=undefined)
        target_compile_options(test_accept_new_peers PRIVATE /fsanitize=address /fsanitize=leak /fsanitize=undefined)
    elseif (APPLE)
        target_link_options(test_accept_new_peers PRIVATE -fsanitize=address -fsanitize=undefined)
        target_compile_options(test_accept_new_peers PRIVATE -fsanitize=address -fsanitize=undefined)
    else ()
        target_link_options(test_accept_new_peers PRIVATE -fsanitize=address -fsanitize=leak -fsanitize=undefined)
        target_compile_options(test_accept_new_peers PRIVATE -fsanitize=address -fsanitize=leak -fsanitize=undefined)
    endif ()
endif ()