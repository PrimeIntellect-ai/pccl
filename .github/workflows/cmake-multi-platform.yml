name: CMake on multiple platforms

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build:
    runs-on: ${{ matrix.runs-on }}
    env:
      IS_CI: 1
      LSAN_OPTIONS: suppressions=${{ github.workspace }}/.github/workflows/lsan.supp
      PCCL_LOG_LEVEL: DEBUG  # Global log level set to DEBUG

    strategy:
      fail-fast: false

      matrix:
        include:
          # Linux configurations using self-hosted runners
          - runs-on: [self-hosted, Linux]
            os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            build_type: Release

          # Windows configurations using GitHub-hosted runners
          - runs-on: windows-latest
            os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
            build_type: Release

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ github.workspace }}

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }} --parallel

      - name: Test
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: ctest --verbose --build-config ${{ matrix.build_type }} --output-on-failure

      - name: Compile Python wheel
        run: cd ${{ github.workspace }}/python/framework && pip3 wheel --verbose -w dist .

      - name: Install Python wheel Win32
        if: runner.os == 'Windows'
        run: pip3 install ${{ github.workspace }}/python/framework/dist/pccl-0.1.0-cp39-cp39-win_amd64.whl

      - name: Install Python wheel Unix
        if: runner.os == 'Linux'
        run: pip3 install ${{ github.workspace }}/python/framework/dist/*.whl

      - name: Install Test dependencies
        run: pip3 install pytest torchvision

      - name: Python Unit Tests
        run: python -m pytest -s ${{ github.workspace }}/python/tests/unit_tests

      - name: Python End-to-End Tests
        working-directory: ${{ github.workspace }}/python/tests/end_to_end/
        run: python -m pytest -s -v ${{ github.workspace }}/python/tests/end_to_end
