name: CMake on multiple platforms

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      IS_CI: 1
      LSAN_OPTIONS: suppressions=${{ github.workspace }}/.github/workflows/lsan.supp

    strategy:
      fail-fast: false
      
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        build_type: [ RelWithDebInfo ]
        include:
          # Linux configurations
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
          # Windows configurations
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ github.workspace }}

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

      - name: Test
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: ctest --build-config ${{ matrix.build_type }} --output-on-failure

      - name: Compile Python wheel
        run: cd ${{ github.workspace }}/python/framework && pip3 wheel -w dist .

      - name: Install Python wheel
        run: pip3 install ${{ github.workspace }}/python/framework/dist/*.whl